generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearchPostgres"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String  @id
  displayname  String
  email        String  @unique
  dipartment   String
  passwordHash String
  googleId     String? @unique
  avatarUrl    String?
  admin        Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  sessions   Session[]
  Todayswork Todayswork[]
  StaffWork  StaffWork[]

  @@map("users")
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime

  user User @relation(references: [id], fields: [userId], onDelete: Cascade)

  @@map("sessions")
}

model Todayswork {
  id      String    @id @default(cuid())
  dob     DateTime?
  content String

  userId String
  User   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())

  @@map("todayswork")
}

model StaffWork {
  id     String  @id @default(cuid())
  userId String @unique
  task1  String?
  task2  String?
  task3  String?
  task4  String?
  task5  String?
  task6  String?
  task7  String?
  task8  String?
  task9  String?
  task10 String?
  task11 String?
  task12 String?
  task13 String?
  task14 String?
  task15 String?
  task16 String?
  task17 String?
  task18 String?
  task19 String?
  task20 String?

  User User @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())

  @@map("staffWork")
}
